	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_distanceEstimator
_distanceEstimator:
	ld	hl, -7
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, (iy)
	ld	hl, (_sphereCenter)
	ld	a, (_sphereCenter+3)
	ld	e, a
	ld	a, (iy + 3)
	call	__fsub
	ld	(ix - 7), bc
	ld	d, a
	ld	iy, (ix + 6)
	ld	bc, (iy + 4)
	ld	hl, (_sphereCenter+4)
	ld	a, (_sphereCenter+7)
	ld	e, a
	ld	iy, (ix + 6)
	ld	a, (iy + 7)
	call	__fsub
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	(ix - 3), bc
	ld	(ix - 4), a
	ld	bc, (ix - 7)
	ld	a, d
	push	bc
	pop	hl
	ld	e, d
	call	__fmul
	ld	hl, (ix - 3)
	ld	e, (ix - 4)
	call	__fadd
	ld	(ix - 3), bc
	ld	d, a
	ld	iy, (ix + 6)
	ld	bc, (iy + 8)
	ld	hl, (_sphereCenter+8)
	ld	a, (_sphereCenter+11)
	ld	e, a
	ld	a, (iy + 11)
	call	__fsub
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	hl, (ix - 3)
	ld	e, d
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	push	hl
	pop	bc
	pop	hl
	pop	hl
	ld	hl, (_sphereRadius)
	ld	a, (_sphereRadius+3)
	ld	d, a
	ld	a, e
	ld	e, d
	call	__fsub
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -69
	call	__frameset
	ld	hl, -1900032
	ld	(ix - 15), hl
	lea	hl, ix - 12
	ld	(ix - 69), hl
	call	_gfx_Begin
	ld	bc, 255
	ld	a, 10
	ld	de, 0
BB1_1:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	z, BB1_3
	push	de
	pop	hl
	ld	c, 3
	call	__ishru
	push	hl
	pop	iy
	ld	c, 5
	call	__sshl
	ld	c, iyl
	ld	b, iyh
	call	__sor
	ld	(ix - 18), hl
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld	c, a
	call	__sshl
	ld	c, l
	ld	b, h
	ld	hl, (ix - 18)
	call	__sor
	ld	bc, 255
	ld	iy, (ix - 15)
	ld	(iy), l
	ld	(iy + 1), h
	inc	de
	lea	iy, iy + 2
	ld	(ix - 15), iy
	jr	BB1_1
BB1_3:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_clock
	ld	(ix - 46), hl
	ld	(ix - 47), e
	ld	de, 320
	ld	bc, 0
BB1_4:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	z, BB1_62
	ld	(ix - 30), bc
	push	bc
	pop	hl
	ld	de, -160
	add	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	iy
	ld	d, a
	ld	hl, -1048576
	ld	e, 67
	call	__fdiv
	ld	hl, -8388608
	ld	e, 62
	call	__fadd
	ld	(ix - 50), bc
	ld	(ix - 51), a
	lea	bc, iy
	ld	a, d
	ld	hl, -6291456
	ld	e, 66
	call	__fdiv
	ld	de, 320
	push	de
	pop	iy
	ld	(ix - 33), bc
	ld	(ix - 34), a
	or	a, a
	sbc	hl, hl
BB1_6:
	push	hl
	pop	de
	ld	bc, 240
	or	a, a
	sbc	hl, bc
	jp	z, BB1_61
	ld	hl, 120
	ld	(ix - 37), de
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	iy
	ld	d, a
	ld	hl, -1048576
	ld	e, 67
	call	__fdiv
	ld	hl, -8388608
	ld	e, 62
	call	__fadd
	ld	(ix - 18), bc
	ld	(ix - 19), a
	lea	bc, iy
	ld	a, d
	ld	hl, -6291456
	ld	e, 66
	call	__fdiv
	ld	(ix - 15), bc
	ld	(ix - 22), a
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 33)
	push	bc
	pop	hl
	ld	a, (ix - 34)
	ld	e, a
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	ld	hl, -8388608
	ld	e, 63
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	ld	d, 63
	ld	iy, -8388608
	pop	bc
	pop	bc
	ld	bc, (ix - 33)
	ld	a, (ix - 34)
	call	__fdiv
	ld	(ix - 61), bc
	ld	(ix - 62), a
	ld	bc, (ix - 15)
	ld	a, (ix - 22)
	call	__fdiv
	ld	(ix - 65), bc
	ld	(ix - 66), a
	lea	bc, iy
	ld	a, d
	call	__fdiv
	ld	(ix - 57), bc
	ld	(ix - 58), a
	lea	bc, iy
	ld	(ix - 22), bc
	ld	a, -65
	ld	(ix - 23), a
	ld	hl, (ix - 50)
	ld	(ix - 26), hl
	ld	a, (ix - 51)
	ld	(ix - 27), a
	or	a, a
	sbc	hl, hl
	ld	(ix - 40), hl
	xor	a, a
	ld	l, a
	ld	(ix - 43), hl
	ld	iy, 0
BB1_8:
	ld	hl, 2348810
	ld	e, 60
	ld	(ix - 15), bc
	ld	a, d
	call	__fcmp
	jp	p, BB1_34
	lea	hl, iy
	ld	bc, 500
	or	a, a
	sbc	hl, bc
	jp	nc, BB1_34
	ld	(ix - 54), iy
	ld	iy, (ix - 26)
	ld	d, (ix - 27)
BB1_11:
	lea	hl, iy
	ld	e, d
	ld	bc, -8388608
	ld	a, -65
	call	__fcmp
	lea	bc, iy
	ld	a, d
	jp	p, BB1_13
	or	a, a
	sbc	hl, hl
	ld	e, 64
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	jr	BB1_11
BB1_13:
	ld	iy, -8388608
	ld	d, 63
BB1_14:
	lea	hl, iy
	ld	e, d
	call	__fcmp
	jp	p, BB1_16
	or	a, a
	sbc	hl, hl
	ld	e, -64
	call	__fadd
	jr	BB1_14
BB1_16:
	ld	(ix - 26), bc
	ld	(ix - 12), bc
	ld	(ix - 27), a
	ld	(ix - 9), a
	ld	iy, (ix - 18)
	ld	d, (ix - 19)
BB1_17:
	lea	hl, iy
	ld	e, d
	ld	bc, -8388608
	ld	a, -65
	call	__fcmp
	lea	bc, iy
	ld	a, d
	jp	p, BB1_19
	or	a, a
	sbc	hl, hl
	ld	e, 64
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	jr	BB1_17
BB1_19:
	ld	iy, (ix - 22)
	ld	d, (ix - 23)
BB1_20:
	ld	hl, -8388608
	ld	e, 63
	call	__fcmp
	jp	p, BB1_22
	or	a, a
	sbc	hl, hl
	ld	e, -64
	call	__fadd
	jr	BB1_20
BB1_22:
	ld	(ix - 18), bc
	ld	(ix - 8), bc
	ld	(ix - 19), a
	ld	(ix - 5), a
BB1_23:
	lea	hl, iy
	ld	e, d
	ld	bc, -8388608
	ld	a, -65
	call	__fcmp
	jp	p, BB1_26
	lea	bc, iy
	ld	a, d
	or	a, a
	sbc	hl, hl
	ld	e, 64
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	jr	BB1_23
BB1_25:
	lea	bc, iy
	ld	a, d
	or	a, a
	sbc	hl, hl
	ld	e, -64
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
BB1_26:
	ld	hl, -8388608
	ld	e, 63
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jp	m, BB1_25
	lea	hl, iy
	ld	iy, (ix - 69)
	lea	iy, iy + 8
	ld	(ix - 22), hl
	ld	(ix - 4), hl
	lea	hl, iy + 3
	ld	(ix - 23), d
	ld	(hl), d
	ld	hl, (ix - 69)
	push	hl
	call	_distanceEstimator
	pop	bc
	ld	bc, 0
	xor	a, a
	call	__fcmp
	ld	d, 1
	jp	m, BB1_29
	ld	d, 0
BB1_29:
	push	hl
	pop	bc
	ld	a, e
	call	__fneg
	bit	0, d
	jr	nz, BB1_31
	push	hl
	pop	bc
BB1_31:
	bit	0, d
	ld	d, a
	jr	nz, BB1_33
	ld	d, e
BB1_33:
	ld	(ix - 15), bc
	ld	bc, (ix - 15)
	ld	a, d
	ld	hl, (ix - 61)
	ld	e, (ix - 62)
	call	__fmul
	ld	hl, (ix - 26)
	ld	e, (ix - 27)
	call	__fadd
	ld	(ix - 26), bc
	ld	(ix - 12), bc
	ld	(ix - 27), a
	ld	(ix - 9), a
	ld	bc, (ix - 15)
	ld	a, d
	ld	hl, (ix - 65)
	ld	e, (ix - 66)
	call	__fmul
	ld	hl, (ix - 18)
	ld	e, (ix - 19)
	call	__fadd
	ld	(ix - 18), bc
	ld	(ix - 8), bc
	ld	(ix - 19), a
	ld	(ix - 5), a
	ld	bc, (ix - 15)
	ld	a, d
	ld	hl, (ix - 57)
	ld	e, (ix - 58)
	call	__fmul
	ld	hl, (ix - 22)
	ld	e, (ix - 23)
	call	__fadd
	ld	(ix - 23), a
	ld	(ix - 22), bc
	ld	(ix - 4), bc
	ld	(ix - 1), a
	ld	iy, (ix - 54)
	inc	iy
	ld	bc, (ix - 40)
	ld	hl, (ix - 43)
	ld	a, l
	ld	hl, (ix - 15)
	ld	e, d
	call	__fadd
	ld	(ix - 40), bc
	ld	bc, (ix - 15)
	ld	l, a
	ld	(ix - 43), hl
	jp	BB1_8
BB1_34:
	or	a, a
	sbc	hl, hl
	push	hl
	ld	(ix - 54), d
	call	_gfx_SetColor
	pop	hl
	ld	hl, 2348810
	ld	e, 60
	ld	bc, (ix - 15)
	ld	a, (ix - 54)
	call	__fcmp
	jp	m, BB1_60
	ld	bc, (ix - 18)
	ld	a, (ix - 19)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 26)
	push	bc
	pop	hl
	ld	(ix - 26), hl
	ld	a, (ix - 27)
	ld	e, a
	ld	(ix - 27), e
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 22)
	push	bc
	pop	hl
	ld	(ix - 22), hl
	ld	a, (ix - 23)
	ld	e, a
	ld	(ix - 23), e
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	pop	bc
	pop	bc
	ld	bc, (ix - 26)
	ld	a, (ix - 27)
	call	__fdiv
	ld	(ix - 26), bc
	ld	(ix - 27), a
	ld	bc, (ix - 18)
	ld	a, (ix - 19)
	call	__fdiv
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 22)
	ld	a, (ix - 23)
	call	__fdiv
	ld	(ix - 15), bc
	ld	(ix - 18), a
	ld	bc, (ix - 65)
	ld	a, (ix - 66)
	lea	hl, iy
	ld	e, d
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 26)
	ld	a, (ix - 27)
	ld	hl, (ix - 61)
	ld	e, (ix - 62)
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 15)
	ld	a, (ix - 18)
	ld	hl, (ix - 57)
	ld	e, (ix - 58)
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	push	bc
	pop	iy
	ld	e, a
	lea	hl, iy
	ld	bc, 0
	xor	a, a
	call	__fcmp
	ld	d, 1
	jp	m, BB1_37
	ld	d, 0
BB1_37:
	lea	bc, iy
	ld	a, e
	call	__fneg
	bit	0, d
	ld	hl, -8388608
	jr	nz, BB1_39
	lea	bc, iy
BB1_39:
	bit	0, d
	jr	nz, BB1_41
	ld	a, e
BB1_41:
	ld	e, 63
	call	__fcmp
	ld	d, 1
	jp	m, BB1_43
	ld	d, 0
BB1_43:
	bit	0, d
	jr	nz, BB1_45
	push	bc
	pop	hl
BB1_45:
	ld	(ix - 15), hl
	bit	0, d
	ld	l, e
	jr	nz, BB1_47
	ld	l, a
BB1_47:
	ld	(ix - 18), l
	ld	hl, (ix - 43)
	push	hl
	ld	hl, (ix - 40)
	push	hl
	call	_sqrt
	pop	bc
	pop	bc
	ld	iy, -8388608
	lea	bc, iy
	ld	d, 63
	ld	a, d
	call	__fdiv
	lea	hl, iy
	ld	e, d
	call	__fcmp
	ld	e, 1
	jp	m, BB1_49
	ld	e, 0
BB1_49:
	bit	0, e
	jr	nz, BB1_51
	push	bc
	pop	iy
BB1_51:
	bit	0, e
	ld	e, d
	jr	nz, BB1_53
	ld	e, a
BB1_53:
	lea	bc, iy
	ld	a, e
	ld	iy, 8323072
	lea	hl, iy
	ld	d, 67
	ld	e, d
	call	__fmul
	ld	hl, (ix - 15)
	ld	e, (ix - 18)
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fcmp
	ld	e, 1
	jp	m, BB1_55
	ld	e, 0
BB1_55:
	bit	0, e
	ld	hl, 8257536
	jr	nz, BB1_57
	push	bc
	pop	hl
BB1_57:
	bit	0, e
	ld	e, 67
	jr	nz, BB1_59
	ld	e, a
BB1_59:
	push	hl
	pop	bc
	ld	a, e
	call	__ftoul
	push	bc
	call	_gfx_SetColor
	pop	hl
BB1_60:
	ld	hl, (ix - 37)
	push	hl
	ld	hl, (ix - 30)
	push	hl
	call	_gfx_SetPixel
	ld	hl, (ix - 37)
	pop	de
	pop	de
	inc	hl
	ld	de, 320
	push	de
	pop	iy
	jp	BB1_6
BB1_61:
	ld	bc, (ix - 30)
	inc	bc
	lea	de, iy
	jp	BB1_4
BB1_62:
	call	_clock
	ld	bc, (ix - 46)
	ld	a, (ix - 47)
	call	__lsub
	push	hl
	pop	bc
	ld	a, e
	ld	l, 15
	call	__lshru
	ld	(ix - 15), bc
	ld	hl, 210
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, 5
	push	hl
	ld	hl, (ix - 15)
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
BB1_63:
	call	_os_GetCSC
	or	a, a
	jr	z, BB1_63
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.data,"aw",@progbits
	public	_VRAM
_VRAM:
	dl	13893632

	section	.bss,"aw",@nobits
	public	_sphereCenter
_sphereCenter:
	rb	12

	section	.data,"aw",@progbits
	public	_sphereRadius
_sphereRadius:
	dd	0x3f000000

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_gfx_Begin
	extern	__fadd
	extern	__lsub
	extern	__sshl
	extern	_sqrt
	extern	__ftoul
	extern	__ishru
	extern	_gfx_SwapDraw
	extern	__fmul
	extern	_gfx_PrintInt
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	__fneg
	extern	__fdiv
	extern	_gfx_SetColor
	extern	_gfx_SetPixel
	extern	__ltof
	extern	__sor
	extern	_gfx_End
	extern	_os_GetCSC
	extern	__fcmp
	extern	_gfx_SetTextXY
	extern	_clock
	extern	__lshru
	extern	__fsub
